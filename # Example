# Example

class Solution:
    def __init__(self):
        self.dic = {}
        self.team = []
        
    def process(self, l):
        self.teams = l[0].split(">")
        self._setup(self.teams)
        self._parse_to_map(l)
        print(self.dic)
        
    def _setup(self, teams):
        for i in range(len(teams)):
            for j in range(len(teams)):
                if i == j:
                    continue
                a, b = teams[i], teams[j]
                if a not in self.dic:
                    self.dic[a] = {}
                    self.dic[a][b] = 
                else:
                    self.dic[a][b] = 0
                    
    def _parse_to_map(self, l):
        for row in l:
            teams = row.split(">")
            for i in range(0, len(teams)):
                for j in range(i+1, len(teams)):
                    a, b = teams[i], teams[j]
                    if a in self.dic:
                        self.dic[a][b] += 1
                        
    def calculate_majorities(self, a, b):
        team_size = len(self.teams)
        if self.dic[a][b] // team_size > 0.5:
            return True
        else:
            return False
            
_input = ["GSW>HOU>BOS", "HOU>GSW>BOS", "GSW>BOS>HOU"]
s = Solution()
s.process(_input)
print(s.calculate_majorities("GSW", "BOS"))
                
        